@{
        Layout = "_AccountLayout.cshtml";

    var passwordResetToken = Request.Form["resetToken"] ?? Request.QueryString["resetToken"];

    bool tokenExpired = false;
    bool isSuccess = false;

    // Validación de la instalación
    Validation.RequireField("newPassword", "El campo de contraseña nueva es obligatorio.");
    Validation.Add("confirmPassword",
        Validator.EqualsTo("newPassword", "La nueva contraseña y la contraseña de confirmación no coinciden."));
    Validation.RequireField("passwordResetToken", "El campo de token de restablecimiento de contraseña es obligatorio.");
    Validation.Add("newPassword",
        Validator.StringLength(
            maxLength: Int32.MaxValue,
            minLength: 6,
            errorMessage: "La contraseña nueva debe contener al menos 6 caracteres"));

    if (IsPost && Validation.IsValid())
    {
        AntiForgery.Validate();
        var newPassword = Request["newPassword"];
        var confirmPassword = Request["confirmPassword"];

        if (WebSecurity.ResetPassword(passwordResetToken, newPassword))
        {
            isSuccess = true;
        }
        else
        {
            ModelState.AddError("passwordResetToken", "El token de restablecimiento de contraseña no es válido.");
            tokenExpired = true;
        }
    }
}

<style>
/* styles for validation helpers */
.field-validation-error {
    color: #e80c4d;
    font-weight: bold;
}

.field-validation-valid {
    display: none;
}

input.input-validation-error {
    border: 1px solid #e80c4d;
}

input[type="checkbox"].input-validation-error {
    border: 0 none;
}

.validation-summary-errors {
    color: #e80c4d;
    font-weight: bold;
    font-size: 1.1em;
}

.validation-summary-valid {
    display: none;
}
</style>


    <div class="container">
        <h3>
            <a href="javascript:history.back()"><i class="icon-arrow-left-3 fg-darker smaller"></i></a>
            Modificar Contraseña<small class="on-right"></small>
        </h3>

        <h2 id="__table__"></h2>
        <div class="example">

            @if (true)
            {//!WebMail.SmtpServer.IsEmpty()) {
                if (!Validation.IsValid())
                {
                    <p class="validation-summary-errors">
                        @if (tokenExpired)
                        {
                            <text>El token de restablecimiento de contraseña no es correcto o puede haber expirado. Visite la <a href="~/Account/ForgotPassword">página de contraseña olvidada</a>
                                para generar una nueva.</text>
                        }
                        else
                        {
                            <text>No se pudo restablecer la contraseña. Corrija los errores e inténtelo de nuevo.</text>
                        }
                    </p>
                }

                if (isSuccess)
                {
                    <p class="message-success">
                        ¡Contraseña cambiada! Haga clic <a href="~/Account/Login" title="Inicio de sesión">aquí</a> para iniciar sesión.
                    </p>
                }

                <form method="post">
                    @AntiForgery.GetHtml()
                    <fieldset>
                        <legend>Formulario de cambio de contraseña</legend>
                        <ol>
                            <li class="new-password">
                                <label for="newPassword" @if (!ModelState.IsValidField("newPassword")) { <text> class="error-label" </text>   }>Nueva contraseña</label>
                                <input type="password" id="newPassword" name="newPassword" disabled="@isSuccess" @Validation.For("newPassword") />
                                @Html.ValidationMessage("newPassword")
                            </li>
                            <li class="confirm-password">
                                <label for="confirmPassword" @if (!ModelState.IsValidField("confirmPassword")) { <text> class="error-label" </text>   }>Confirmar contraseña</label>
                                <input type="password" id="confirmPassword" name="confirmPassword" disabled="@isSuccess" @Validation.For("confirmPassword") />
                                @Html.ValidationMessage("confirmPassword")
                            </li>
                            <li class="reset-token">
                                <label for="resetToken" @if (!ModelState.IsValidField("resetToken")) { <text> class="error-label" </text>   }>Password reset token</label>
                                <input type="text" id="resetToken" name="resetToken" value="@passwordResetToken" disabled="@isSuccess" @Validation.For("resetToken") />
                                @Html.ValidationMessage("resetToken")
                            </li>
                        </ol>
                        <input type="submit" value="Restablecer contraseña" disabled="@isSuccess" />
                    </fieldset>
                </form>
            }
            else
            {
                <p class="message-info">
                    La recuperación de contraseña está deshabilitada para este sitio web porque el servidor SMTP
                    no está correctamente configurado. Póngase en contacto con el propietario de
                    este sitio para restablecer la contraseña.
                </p>
            }

        </div>
    </div> <!-- End of container -->
       <div class="row flex-center min-vh-100 py-6">
           <div class="col-sm-10 col-md-8 col-lg-6 col-xl-5 col-xxl-4"><a class="d-flex flex-center mb-4" href="#"><img class="me-2" src="../assets/img/logoc.ico" alt="" width="80" /><span class="font-sans-serif fw-bolder fs-5 d-inline-block">Confluencia</span></a>
            <div class="card">
              <div class="card-body p-4 p-sm-5">
                <h5 class="text-center">Cambiar mi Contraseña</h5>
                <form class="mt-3">

                  <div class="mb-3">
                                     @if (!ModelState.IsValidField("newPassword")) { <text> class="error-label" </text>      }
                                    <input class="form-control" type="password" id="newPassword" name="newPassword" placeholder="Nueva Contraseña" @Validation.For("newPassword") />
                                    @Html.ValidationMessage("newPassword")
                  </div>
                  <div class="mb-3">
                    @if (!ModelState.IsValidField("confirmPassword")) { <text> class="error-label" </text>      }
                                    <input class="form-control" type="password" id="confirmPassword" name="confirmPassword" placeholder="Confirmar Contraseña" @Validation.For("confirmPassword") />
                                    @Html.ValidationMessage("confirmPassword")
                  </div>
                  <button class="btn btn-primary d-block w-100 mt-3" type="submit" name="action" value="password">Blanquear contraseña</button>
                </form>
              </div>
            </div>
          </div>
        </div>
